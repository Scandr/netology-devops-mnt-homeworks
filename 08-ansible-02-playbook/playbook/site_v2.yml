---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          become: true
          ansible.builtin.apt:
            deb: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse-common-static/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
        - name: Get clickhouse distrib
          become: true
          ansible.builtin.apt:
            deb: "https://packages.clickhouse.com/deb/pool/main/c/{{ item }}/{{ item }}_{{ clickhouse_version }}_all.deb"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          become: true
          ansible.builtin.apt:
            deb: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse-common-static/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"

      notify: Start clickhouse service

    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  handlers:
    - name: Config vector
      become: true
      ansible.builtin.shell:
        cmd: "vector --config {{ vector_dir }}/config/vector.toml >/dev/null 2>&1 &"

  tasks:
    - name: Check if vector dir exists
      ansible.builtin.stat: path="{{ vector_dir }}"
      register: vector_dir_stat

    - name: Create dir for vector installation
      become: true
      ansible.builtin.file:
        path: "{{ vector_dir }}"
        state: directory
        owner: "yelena"
        group: "yelena"
        mode: '0755'
      when: not vector_dir_stat.stat.exists

    - name: Clean up dir for vector installation
      become: true
      ansible.builtin.file:
        state: absent
        path: "{{ vector_dir }}/"
      when: vector_dir_stat.stat.exists

    - name: Get vector distrib
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-musl.tar.gz"
        dest: "{{ vector_dir }}/vector-{{ vector_version }}-x86_64-unknown-linux-musl.tar.gz"
        mode: '0664'

    - name: Extract archive
      ansible.builtin.unarchive:
        src: "{{ vector_dir }}/vector-{{ vector_version }}-x86_64-unknown-linux-musl.tar.gz"
        dest: "{{ vector_dir }}"

    - name: Check if archive folder is empty
      ansible.builtin.stat: path="{{ vector_dir }}/vector-x86_64-unknown-linux-musl/"
      register: archive_dir_stat

    - name: Move to vector_dir
      ansible.builtin.shell:
        cmd: 'mv {{ vector_dir }}/vector-x86_64-unknown-linux-musl/* /opt/vector/'
      when: archive_dir_stat

    - name: Recursively remove vector archive directory
      ansible.builtin.file:
        path: /opt/vector/vector-x86_64-unknown-linux-musl
        state: absent
      when: archive_dir_stat

# this task do not pass lint test but it depends on var value which can be changed every new playbook run
    - name: Add another bin dir to system-wide $PATH
      become: true
      ansible.builtin.shell:
        cmd: 'echo "PATH=$PATH:{{ vector_dir }}" > /etc/profile.d/vector-path.sh'

    - name: Check if sym link for vector exists in /usr/bin
      ansible.builtin.stat: path="/usr/bin/vector"
      register: vector_bin_stat

    - name: Replace sym link for vector
      when: vector_bin_stat
      become: true
      block:
        - name: Delete old vector symlink in /usr/bin
          ansible.builtin.file:
            path: "/usr/bin/vector"
            state: absent

        - name: Add vector symlink to /usr/bin
          ansible.builtin.file:
            src: "{{ vector_dir }}/bin/vector"
            dest: "/usr/bin/vector"
            state: link

    - name: Add vector symlink to /usr/bin
      become: true
      ansible.builtin.file:
        src: "{{ vector_dir }}/bin/vector"
        dest: "/usr/bin/vector"
        state: link
      when: not vector_bin_stat
